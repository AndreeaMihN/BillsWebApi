name: Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    types: [opened, synchronize, reopened]
    
jobs:
  validate-changes:
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available.
          
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.0.x'

      - name: Install dependencies
        run: |
          dotnet tool install --global JetBrains.dotCover.GlobalTool
          dotnet restore

      - name: Sonarqube Begin
        run: | 
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin /k:"BillsWebApi" /d:sonar.host.url="http://localhost:9000"  /d:sonar.login="sqp_3bc0c13fe19203e202779130cc1c951d75aeb700"

      - name: Build
        run: dotnet build --no-incremental

      - name: Test with the dotnet CLI
        run: dotnet dotcover test --dcReportType=HTML
        
      # Triggering SonarQube analysis as results of it are required by Quality Gate check.
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_LOCAL }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL_LOCAL }}

      # Check the Quality Gate status.
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          scanMetadataReportFile: target/sonar/report-task.txt
        # Force to fail step after specific time.
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_LOCAL }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL_LOCAL }} #OPTIONAL

      # Optionally you can use the output from the Quality Gate in another step.
      # The possible outputs of the `quality-gate-status` variable are `PASSED`, `WARN` or `FAILED`.
      - name: "Example show SonarQube Quality Gate Status value"
        run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"
          
      - name: Sonarqube end
        run: dotnet sonarscanner end /d:sonar.login="sqp_3bc0c13fe19203e202779130cc1c951d75aeb700"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      

